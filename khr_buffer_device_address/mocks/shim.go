// Code generated by MockGen. DO NOT EDIT.
// Source: shim.go

// Package mock_buffer_device_address is a generated GoMock package.
package mock_buffer_device_address

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core1_2 "github.com/vkngwrapper/core/v2/core1_2"
)

// MockShim is a mock of Shim interface.
type MockShim struct {
	ctrl     *gomock.Controller
	recorder *MockShimMockRecorder
}

// MockShimMockRecorder is the mock recorder for MockShim.
type MockShimMockRecorder struct {
	mock *MockShim
}

// NewMockShim creates a new mock instance.
func NewMockShim(ctrl *gomock.Controller) *MockShim {
	mock := &MockShim{ctrl: ctrl}
	mock.recorder = &MockShimMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShim) EXPECT() *MockShimMockRecorder {
	return m.recorder
}

// GetBufferDeviceAddress mocks base method.
func (m *MockShim) GetBufferDeviceAddress(o core1_2.BufferDeviceAddressInfo) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBufferDeviceAddress", o)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBufferDeviceAddress indicates an expected call of GetBufferDeviceAddress.
func (mr *MockShimMockRecorder) GetBufferDeviceAddress(o interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBufferDeviceAddress", reflect.TypeOf((*MockShim)(nil).GetBufferDeviceAddress), o)
}

// GetBufferOpaqueCaptureAddress mocks base method.
func (m *MockShim) GetBufferOpaqueCaptureAddress(o core1_2.BufferDeviceAddressInfo) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBufferOpaqueCaptureAddress", o)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBufferOpaqueCaptureAddress indicates an expected call of GetBufferOpaqueCaptureAddress.
func (mr *MockShimMockRecorder) GetBufferOpaqueCaptureAddress(o interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBufferOpaqueCaptureAddress", reflect.TypeOf((*MockShim)(nil).GetBufferOpaqueCaptureAddress), o)
}

// GetDeviceMemoryOpaqueCaptureAddress mocks base method.
func (m *MockShim) GetDeviceMemoryOpaqueCaptureAddress(o core1_2.DeviceMemoryOpaqueCaptureAddressInfo) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeviceMemoryOpaqueCaptureAddress", o)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeviceMemoryOpaqueCaptureAddress indicates an expected call of GetDeviceMemoryOpaqueCaptureAddress.
func (mr *MockShimMockRecorder) GetDeviceMemoryOpaqueCaptureAddress(o interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeviceMemoryOpaqueCaptureAddress", reflect.TypeOf((*MockShim)(nil).GetDeviceMemoryOpaqueCaptureAddress), o)
}
