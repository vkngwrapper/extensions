// Code generated by MockGen. DO NOT EDIT.
// Source: shim.go

// Package mock_draw_indirect_count is a generated GoMock package.
package mock_draw_indirect_count

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core1_0 "github.com/vkngwrapper/core/v2/core1_0"
)

// MockShim is a mock of Shim interface.
type MockShim struct {
	ctrl     *gomock.Controller
	recorder *MockShimMockRecorder
}

// MockShimMockRecorder is the mock recorder for MockShim.
type MockShimMockRecorder struct {
	mock *MockShim
}

// NewMockShim creates a new mock instance.
func NewMockShim(ctrl *gomock.Controller) *MockShim {
	mock := &MockShim{ctrl: ctrl}
	mock.recorder = &MockShimMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShim) EXPECT() *MockShimMockRecorder {
	return m.recorder
}

// CmdDrawIndexedIndirectCount mocks base method.
func (m *MockShim) CmdDrawIndexedIndirectCount(buffer core1_0.Buffer, offset uint64, countBuffer core1_0.Buffer, countBufferOffset uint64, maxDrawCount, stride int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CmdDrawIndexedIndirectCount", buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride)
}

// CmdDrawIndexedIndirectCount indicates an expected call of CmdDrawIndexedIndirectCount.
func (mr *MockShimMockRecorder) CmdDrawIndexedIndirectCount(buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CmdDrawIndexedIndirectCount", reflect.TypeOf((*MockShim)(nil).CmdDrawIndexedIndirectCount), buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride)
}

// CmdDrawIndirectCount mocks base method.
func (m *MockShim) CmdDrawIndirectCount(buffer core1_0.Buffer, offset uint64, countBuffer core1_0.Buffer, countBufferOffset uint64, maxDrawCount, stride int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CmdDrawIndirectCount", buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride)
}

// CmdDrawIndirectCount indicates an expected call of CmdDrawIndirectCount.
func (mr *MockShimMockRecorder) CmdDrawIndirectCount(buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CmdDrawIndirectCount", reflect.TypeOf((*MockShim)(nil).CmdDrawIndirectCount), buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride)
}
