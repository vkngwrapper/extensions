// Code generated by MockGen. DO NOT EDIT.
// Source: extiface.go

// Package mock_maintenance4 is a generated GoMock package.
package mock_maintenance4

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core1_0 "github.com/vkngwrapper/core/v2/core1_0"
	core1_1 "github.com/vkngwrapper/core/v2/core1_1"
	khr_maintenance4 "github.com/vkngwrapper/extensions/v2/khr_maintenance4"
)

// MockExtension is a mock of Extension interface.
type MockExtension struct {
	ctrl     *gomock.Controller
	recorder *MockExtensionMockRecorder
}

// MockExtensionMockRecorder is the mock recorder for MockExtension.
type MockExtensionMockRecorder struct {
	mock *MockExtension
}

// NewMockExtension creates a new mock instance.
func NewMockExtension(ctrl *gomock.Controller) *MockExtension {
	mock := &MockExtension{ctrl: ctrl}
	mock.recorder = &MockExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExtension) EXPECT() *MockExtensionMockRecorder {
	return m.recorder
}

// DeviceBufferMemoryRequirements mocks base method.
func (m *MockExtension) DeviceBufferMemoryRequirements(device core1_0.Device, options khr_maintenance4.DeviceBufferMemoryRequirements, outData *core1_1.MemoryRequirements2) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeviceBufferMemoryRequirements", device, options, outData)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeviceBufferMemoryRequirements indicates an expected call of DeviceBufferMemoryRequirements.
func (mr *MockExtensionMockRecorder) DeviceBufferMemoryRequirements(device, options, outData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeviceBufferMemoryRequirements", reflect.TypeOf((*MockExtension)(nil).DeviceBufferMemoryRequirements), device, options, outData)
}

// DeviceImageMemoryRequirements mocks base method.
func (m *MockExtension) DeviceImageMemoryRequirements(device core1_0.Device, options khr_maintenance4.DeviceImageMemoryRequirements, outData *core1_1.MemoryRequirements2) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeviceImageMemoryRequirements", device, options, outData)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeviceImageMemoryRequirements indicates an expected call of DeviceImageMemoryRequirements.
func (mr *MockExtensionMockRecorder) DeviceImageMemoryRequirements(device, options, outData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeviceImageMemoryRequirements", reflect.TypeOf((*MockExtension)(nil).DeviceImageMemoryRequirements), device, options, outData)
}

// DeviceImageSparseMemoryRequirements mocks base method.
func (m *MockExtension) DeviceImageSparseMemoryRequirements(device core1_0.Device, options khr_maintenance4.DeviceImageMemoryRequirements, outDataFactory func() *core1_1.SparseImageMemoryRequirements2) ([]*core1_1.SparseImageMemoryRequirements2, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeviceImageSparseMemoryRequirements", device, options, outDataFactory)
	ret0, _ := ret[0].([]*core1_1.SparseImageMemoryRequirements2)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeviceImageSparseMemoryRequirements indicates an expected call of DeviceImageSparseMemoryRequirements.
func (mr *MockExtensionMockRecorder) DeviceImageSparseMemoryRequirements(device, options, outDataFactory interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeviceImageSparseMemoryRequirements", reflect.TypeOf((*MockExtension)(nil).DeviceImageSparseMemoryRequirements), device, options, outDataFactory)
}
