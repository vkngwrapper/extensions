// Code generated by MockGen. DO NOT EDIT.
// Source: surface.go

// Package mock_surface is a generated GoMock package.
package mock_surface

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "github.com/vkngwrapper/core/v2/common"
	core1_0 "github.com/vkngwrapper/core/v2/core1_0"
	driver "github.com/vkngwrapper/core/v2/driver"
	khr_surface "github.com/vkngwrapper/extensions/v2/khr_surface"
	khr_surface_driver "github.com/vkngwrapper/extensions/v2/khr_surface/driver"
)

// MockSurface is a mock of Surface interface.
type MockSurface struct {
	ctrl     *gomock.Controller
	recorder *MockSurfaceMockRecorder
}

// MockSurfaceMockRecorder is the mock recorder for MockSurface.
type MockSurfaceMockRecorder struct {
	mock *MockSurface
}

// NewMockSurface creates a new mock instance.
func NewMockSurface(ctrl *gomock.Controller) *MockSurface {
	mock := &MockSurface{ctrl: ctrl}
	mock.recorder = &MockSurfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSurface) EXPECT() *MockSurfaceMockRecorder {
	return m.recorder
}

// Destroy mocks base method.
func (m *MockSurface) Destroy(callbacks *driver.AllocationCallbacks) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Destroy", callbacks)
}

// Destroy indicates an expected call of Destroy.
func (mr *MockSurfaceMockRecorder) Destroy(callbacks interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockSurface)(nil).Destroy), callbacks)
}

// Handle mocks base method.
func (m *MockSurface) Handle() khr_surface_driver.VkSurfaceKHR {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handle")
	ret0, _ := ret[0].(khr_surface_driver.VkSurfaceKHR)
	return ret0
}

// Handle indicates an expected call of Handle.
func (mr *MockSurfaceMockRecorder) Handle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockSurface)(nil).Handle))
}

// PhysicalDeviceSurfaceCapabilities mocks base method.
func (m *MockSurface) PhysicalDeviceSurfaceCapabilities(device core1_0.PhysicalDevice) (*khr_surface.SurfaceCapabilities, common.VkResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PhysicalDeviceSurfaceCapabilities", device)
	ret0, _ := ret[0].(*khr_surface.SurfaceCapabilities)
	ret1, _ := ret[1].(common.VkResult)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// PhysicalDeviceSurfaceCapabilities indicates an expected call of PhysicalDeviceSurfaceCapabilities.
func (mr *MockSurfaceMockRecorder) PhysicalDeviceSurfaceCapabilities(device interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PhysicalDeviceSurfaceCapabilities", reflect.TypeOf((*MockSurface)(nil).PhysicalDeviceSurfaceCapabilities), device)
}

// PhysicalDeviceSurfaceFormats mocks base method.
func (m *MockSurface) PhysicalDeviceSurfaceFormats(device core1_0.PhysicalDevice) ([]khr_surface.SurfaceFormat, common.VkResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PhysicalDeviceSurfaceFormats", device)
	ret0, _ := ret[0].([]khr_surface.SurfaceFormat)
	ret1, _ := ret[1].(common.VkResult)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// PhysicalDeviceSurfaceFormats indicates an expected call of PhysicalDeviceSurfaceFormats.
func (mr *MockSurfaceMockRecorder) PhysicalDeviceSurfaceFormats(device interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PhysicalDeviceSurfaceFormats", reflect.TypeOf((*MockSurface)(nil).PhysicalDeviceSurfaceFormats), device)
}

// PhysicalDeviceSurfacePresentModes mocks base method.
func (m *MockSurface) PhysicalDeviceSurfacePresentModes(device core1_0.PhysicalDevice) ([]khr_surface.PresentMode, common.VkResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PhysicalDeviceSurfacePresentModes", device)
	ret0, _ := ret[0].([]khr_surface.PresentMode)
	ret1, _ := ret[1].(common.VkResult)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// PhysicalDeviceSurfacePresentModes indicates an expected call of PhysicalDeviceSurfacePresentModes.
func (mr *MockSurfaceMockRecorder) PhysicalDeviceSurfacePresentModes(device interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PhysicalDeviceSurfacePresentModes", reflect.TypeOf((*MockSurface)(nil).PhysicalDeviceSurfacePresentModes), device)
}

// PhysicalDeviceSurfaceSupport mocks base method.
func (m *MockSurface) PhysicalDeviceSurfaceSupport(physicalDevice core1_0.PhysicalDevice, queueFamilyIndex int) (bool, common.VkResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PhysicalDeviceSurfaceSupport", physicalDevice, queueFamilyIndex)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(common.VkResult)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// PhysicalDeviceSurfaceSupport indicates an expected call of PhysicalDeviceSurfaceSupport.
func (mr *MockSurfaceMockRecorder) PhysicalDeviceSurfaceSupport(physicalDevice, queueFamilyIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PhysicalDeviceSurfaceSupport", reflect.TypeOf((*MockSurface)(nil).PhysicalDeviceSurfaceSupport), physicalDevice, queueFamilyIndex)
}
